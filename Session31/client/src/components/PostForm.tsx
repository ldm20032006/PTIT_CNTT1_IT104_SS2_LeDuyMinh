import { useState } from "react";
import axios from "axios";

// Khai b√°o interface Post ngay trong file
interface Post {
  id: number;
  title: string;
  image: string;
  content: string;
  date: string;
  status: string;
}

const PostForm = ({
  onClose,
  onSuccess,
  posts,
  editingPost,
}: {
  onClose: () => void;
  onSuccess: () => void;
  posts: Post[];
  editingPost: Post | null;
}) => {
  const [title, setTitle] = useState(editingPost ? editingPost.title : "");
  const [image, setImage] = useState(editingPost ? editingPost.image : "");
  const [content, setContent] = useState(editingPost ? editingPost.content : "");
  const [showConfirmReset, setShowConfirmReset] = useState(false);
  const [error, setError] = useState("");

  // Validate d·ªØ li·ªáu
  const validate = () => {
    if (!title.trim() || !image.trim() || !content.trim()) {
      setError("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
      return false;
    }
    const isDuplicate = posts.some(
      (p) =>
        p.title.toLowerCase() === title.toLowerCase() &&
        (!editingPost || p.id !== editingPost.id)
    );
    if (isDuplicate) {
      setError("‚ö†Ô∏è T√™n b√†i vi·∫øt ƒë√£ t·ªìn t·∫°i!");
      return false;
    }
    setError("");
    return true;
  };

  // Submit form
  const handleSubmit = async () => {
    if (!validate()) return;

    try {
      if (editingPost) {
        // C·∫≠p nh·∫≠t
        await axios.put(`http://localhost:3000/posts/${editingPost.id}`, {
          title,
          image,
          content,
          date: editingPost.date,
          status: editingPost.status,
        });
      } else {
        // Th√™m m·ªõi
        await axios.post("http://localhost:3000/posts", {
          title,
          image,
          content,
          date: new Date().toLocaleDateString("vi-VN"),
          status: "ƒê√£ xu·∫•t b·∫£n",
        });
      }
      onSuccess();
      onClose();
    } catch (err) {
      console.error("L·ªói khi l∆∞u:", err);
    }
  };

  // Reset d·ªØ li·ªáu
  const handleReset = () => {
    setTitle("");
    setImage("");
    setContent("");
    setShowConfirmReset(false);
  };

  return (
    <div className="modal">
      <div className="modal-content" style={{ width: "600px" }}>
        <div className="modal-header">
          <h2>{editingPost ? "C·∫≠p nh·∫≠t b√†i vi·∫øt" : "Th√™m m·ªõi b√†i vi·∫øt"}</h2>
          <button onClick={onClose} className="btn-close">‚úñ</button>
        </div>

        <div className="modal-body">
          {error && <div style={{ color: "red", marginBottom: "10px" }}>{error}</div>}

          <label>üìù T√™n b√†i vi·∫øt</label>
          <input
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            placeholder="Nh·∫≠p t√™n b√†i vi·∫øt"
          />

          <label>üñº H√¨nh ·∫£nh (URL)</label>
          <input
            value={image}
            onChange={(e) => setImage(e.target.value)}
            placeholder="Nh·∫≠p link h√¨nh ·∫£nh"
          />

          <label>üìÑ N·ªôi dung</label>
          <textarea
            rows={6}
            value={content}
            onChange={(e) => setContent(e.target.value)}
            placeholder="Nh·∫≠p n·ªôi dung b√†i vi·∫øt"
          />
        </div>

        <div className="modal-footer">
          <button onClick={() => setShowConfirmReset(true)}>L√†m m·ªõi</button>
          <button
            onClick={handleSubmit}
            style={{ background: "blue", color: "white" }}
          >
            {editingPost ? "C·∫≠p nh·∫≠t" : "Xu·∫•t b·∫£n"}
          </button>
        </div>
      </div>

      {/* Modal x√°c nh·∫≠n l√†m m·ªõi */}
      {showConfirmReset && (
        <div className="modal-overlay">
          <div className="modal-content">
            <p>B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a h·∫øt d·ªØ li·ªáu?</p>
            <button onClick={() => setShowConfirmReset(false)}>H·ªßy</button>
            <button
              onClick={handleReset}
              style={{ background: "red", color: "white" }}
            >
              X√°c nh·∫≠n
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default PostForm;
